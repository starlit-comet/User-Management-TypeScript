<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Admin Login</title>
  <style>
    * {
      box-sizing: border-box;
    }

    body {
      margin: 0;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(to right, #141e30, #243b55);
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      color: #fff;
    }

    .login-box {
      background: rgba(255, 255, 255, 0.05);
      padding: 2.5rem 2rem;
      border-radius: 15px;
      box-shadow: 0 0 15px rgba(0,0,0,0.5);
      width: 100%;
      max-width: 400px;
      text-align: center;
      animation: slideIn 1.2s ease;
    }

    .login-box h2 {
      margin-bottom: 1.5rem;
      font-size: 2rem;
    }

    .input-group {
      margin-bottom: 1rem;
      text-align: left;
    }

    .input-group label {
      display: block;
      margin-bottom: 0.4rem;
      font-weight: bold;
    }

    .input-group input {
      width: 100%;
      padding: 0.7rem;
      border: none;
      border-radius: 8px;
      background: rgba(255, 255, 255, 0.1);
      color: #fff;
      font-size: 1rem;
      transition: 0.3s;
    }

    .input-group input:focus {
      outline: none;
      background: rgba(255, 255, 255, 0.2);
    }

    .btn-login {
      margin-top: 1.5rem;
      width: 100%;
      padding: 0.8rem;
      background-color: #00b09b;
      border: none;
      border-radius: 8px;
      color: white;
      font-size: 1rem;
      font-weight: bold;
      cursor: pointer;
      transition: background-color 0.3s ease;
    }

    .btn-login:hover {
      background-color: #00a08d;
    }

    @keyframes slideIn {
      from {
        transform: translateY(-30px);
        opacity: 0;
      }
      to {
        transform: translateY(0);
        opacity: 1;
      }
    }
  </style>
</head>
<body>
  <form class="login-box" id="loginform">
    <h2>Admin Login</h2>

    <div class="input-group">
      <label for="email">Email</label>
      <input type="email" name="email" id="email" required placeholder="admin@example.com"/>
    </div>

    <div class="input-group">
      <label for="password">Password</label>
      <input type="password" name="password" id="password" required placeholder="Enter password"/>
    </div>

    <button type="submit" class="btn-login">Login</button>
  </form>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
 <script>
  document.getElementById('loginForm').addEventListener('submit', async function (e) {
    e.preventDefault();
    
    const email = document.getElementById('email').value.trim();
    const password = document.getElementById('password').value.trim();

    try {
      const response = await fetch('/admin/login', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({ email, password })
      });

      const result = await response.json();
      console.log(result)
      if (response.ok) {
        Swal.fire({
          icon: 'success',
          title: 'Login Successful',
          text: 'Redirecting to Dashboard'
        }).then(() => {
          window.location.href = '/admin/dashboard'; // ✅ fixed typo
        });
      } else {
        // ❌ Server returned error status (e.g. 401, 403, 500)
        Swal.fire({
          icon: 'error',
          title: 'Login Failed',
          text: result.message || 'Invalid email or password'
        });
      }

    } catch (error) {
      // ❌ Network/server error
      Swal.fire({
        icon: 'error',
        title: 'Error',
        text: 'Unable to connect to the server'
      });
      console.error('Login Error:', error);
    }
  });
</script>

</body>
</html>
